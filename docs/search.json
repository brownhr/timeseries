[{"path":"index.html","id":"welcome","chapter":"Welcome","heading":"Welcome","text":"Welcome course outline Time Series Data R! course offers methods workflows analyzing interpreting time series data, overview , , use time series data, various utilities packages R beneficial analysts.","code":""},{"path":"course-outline-manipulating-time-series-data-in-r.html","id":"course-outline-manipulating-time-series-data-in-r","chapter":"Course Outline: Manipulating Time Series Data in R","heading":"Course Outline: Manipulating Time Series Data in R","text":"course introduce learners working time series data R. Learners explore store format data date time objects well manipulate time series datasets subsetting, indexing, extraction. Examples time series data across variety fields business science discussed. course cover summarization, frequency, missing data, resampling, comparison techniques well window functions rolling expanding windows.Packages Used:base stats (default libraries, wanted name explicitly)zoolubridate (far, lubridate::year() function (Lesson 3.3))Functions written code text Learning Objective","code":""},{"path":"course-outline-manipulating-time-series-data-in-r.html","id":"chapter-1-introduction-to-time-series-data","chapter":"Course Outline: Manipulating Time Series Data in R","heading":"Chapter 1: Introduction to Time Series Data","text":"","code":""},{"path":"course-outline-manipulating-time-series-data-in-r.html","id":"lesson-1.1-what-is-time-series-data","chapter":"Course Outline: Manipulating Time Series Data in R","heading":"Lesson 1.1: What is Time Series Data","text":"Learning Objective: Learner able understand foundations time series data: rather just analyzing variable different points time, time series analysis studies variable changes time.","code":""},{"path":"course-outline-manipulating-time-series-data-in-r.html","id":"lesson-1.2-interpreting-a-time-series","chapter":"Course Outline: Manipulating Time Series Data in R","heading":"Lesson 1.2: Interpreting a Time Series","text":"Learning Objective: Learner able interpret time series graph, understanding x- y-axes identifying trends periods introductory level.","code":""},{"path":"course-outline-manipulating-time-series-data-in-r.html","id":"lesson-1.3-temporal-data-classes-in-r","chapter":"Course Outline: Manipulating Time Series Data in R","heading":"Lesson 1.3: Temporal data classes in R","text":"Learning Objective: Learner introduced different formats temporal data R, Date, numeric, character classes:e.g.: 2022-01-30, 19022, “2022-01-30” share information, different formatsLearning Objective: Learners able check classes data stored vectors columns dataframe tibble; formats appear identical, ’s important understand class data ’re working :\nclass()\nclass()","code":""},{"path":"course-outline-manipulating-time-series-data-in-r.html","id":"lesson-1.4-converting-between-data-classes","chapter":"Course Outline: Manipulating Time Series Data in R","heading":"Lesson 1.4: Converting between data classes","text":"Learning Objective: Learners able convert classes R, converting character vector/column Date vector/column:\n.Date()\n.numeric()\n.character()\n.Date().numeric().character()","code":""},{"path":"course-outline-manipulating-time-series-data-in-r.html","id":"chapter-2-time-series-objects-in-r","chapter":"Course Outline: Manipulating Time Series Data in R","heading":"Chapter 2: Time Series objects in R","text":"","code":""},{"path":"course-outline-manipulating-time-series-data-in-r.html","id":"lesson-2.1-how-does-r-store-time-series-data","chapter":"Course Outline: Manipulating Time Series Data in R","heading":"Lesson 2.1: How does R store Time Series Data?","text":"Learning Objective: Learners introduced ts objects R, differ objects like vectors data frames store data, data displayed R:\nprint() (specifically, print.ts())\nplot() (specifically, plot.ts())\nprint() (specifically, print.ts())plot() (specifically, plot.ts())Learning Objective: Learners able retrieve temporal attributes (start end points, well frequency) time series object:\nstart()\nend()\nfrequency()\nstart()end()frequency()","code":""},{"path":"course-outline-manipulating-time-series-data-in-r.html","id":"lesson-2.2-create-a-time-series-object-in-base-r","chapter":"Course Outline: Manipulating Time Series Data in R","heading":"Lesson 2.2: Create a Time Series object in Base R","text":"Learning Objective: Learners convert vector observations known start time frequency (e.g., monthly data starting year 2004) ts object:\nts()\n.ts()\nts().ts()","code":""},{"path":"course-outline-manipulating-time-series-data-in-r.html","id":"lesson-2.3-using-the-zoo-package-to-store-time-series-data","chapter":"Course Outline: Manipulating Time Series Data in R","heading":"Lesson 2.3: Using the Zoo Package to store time series data","text":"Learning Objective: Learners introduced zoo object zoo package, different base ts:\nZoo can use irregular time intervals, robust, etc.\nZoo can use irregular time intervals, robust, etc.Learning Objective: Learners able convert coerce time series objects zoo package:\nzoo::zoo()\nzoo::.zoo()\nzoo::zoo()zoo::.zoo()","code":""},{"path":"course-outline-manipulating-time-series-data-in-r.html","id":"lesson-2.4-using-zoo-to-extract-time-and-data-vectors","chapter":"Course Outline: Manipulating Time Series Data in R","heading":"Lesson 2.4: Using Zoo to extract time and data vectors","text":"Learning Objective: Learners can extract “core data” time data ts zoo object:\ntime()\nzoo::coredata()\ntime()zoo::coredata()","code":""},{"path":"course-outline-manipulating-time-series-data-in-r.html","id":"chapter-3-subsetting-extracting-and-resampling","chapter":"Course Outline: Manipulating Time Series Data in R","heading":"Chapter 3: Subsetting, Extracting, and Resampling","text":"","code":""},{"path":"course-outline-manipulating-time-series-data-in-r.html","id":"lesson-3.1-subsetting-a-window-of-observations","chapter":"Course Outline: Manipulating Time Series Data in R","heading":"Lesson 3.1: Subsetting a window of observations","text":"Learning Objective: Learners able extract window observations set given points time:\nwindow()\n.Date()\nzoo::.yearmon()\nwindow().Date()zoo::.yearmon()Learning Objective: Learners use '[' operator .Date() extract observation specific time:\n'['\n.Date()\nzoo::.yearmon()\n'['.Date()zoo::.yearmon()","code":""},{"path":"course-outline-manipulating-time-series-data-in-r.html","id":"lesson-3.2-retrieving-observations-by-index","chapter":"Course Outline: Manipulating Time Series Data in R","heading":"Lesson 3.2: Retrieving observations by index","text":"Learning Objective: Learners use standard R functions extract one observations numerical index:\n'['\nhead()\ntail()\ne.g.: data[1:20] retrieves observations 1 20, head(data, n = 20)\n'['head()tail()e.g.: data[1:20] retrieves observations 1 20, head(data, n = 20)","code":""},{"path":"course-outline-manipulating-time-series-data-in-r.html","id":"lesson-3.3-resampling-observations","chapter":"Course Outline: Manipulating Time Series Data in R","heading":"Lesson 3.3: Resampling observations","text":"Learning Objective: Learner able re-sample observations interval time (yearly, monthly, quarterly, etc.):\naggregate() (specifically, aggregate.zoo() zoo objects)\nlubridate::year()\nzoo::yearqtr()\nzoo::yearmon()\ne.g.: aggregate(data, = lubridate::year, FUN = sum) finds sums observations within year.\naggregate() (specifically, aggregate.zoo() zoo objects)lubridate::year()zoo::yearqtr()zoo::yearmon()e.g.: aggregate(data, = lubridate::year, FUN = sum) finds sums observations within year.","code":""},{"path":"course-outline-manipulating-time-series-data-in-r.html","id":"lesson-3.4-imputing-missing-values","chapter":"Course Outline: Manipulating Time Series Data in R","heading":"Lesson 3.4: Imputing Missing Values","text":"Learning Objective: Learners use zoo package impute missing values either linear interpolation cubic spline interpolation:\nzoo::na.approx() zoo::na.spline(), respectively\nzoo::na.approx() zoo::na.spline(), respectively","code":""},{"path":"course-outline-manipulating-time-series-data-in-r.html","id":"chapter-4-rolling-and-expanding-windows","chapter":"Course Outline: Manipulating Time Series Data in R","heading":"Chapter 4: Rolling and Expanding Windows","text":"","code":""},{"path":"course-outline-manipulating-time-series-data-in-r.html","id":"lesson-4.1-what-are-windows","chapter":"Course Outline: Manipulating Time Series Data in R","heading":"Lesson 4.1: What are windows?","text":"Learning Objective: Learners understand utility rolling expanding windows: finding moving averages, cumulative sums, etc.","code":""},{"path":"course-outline-manipulating-time-series-data-in-r.html","id":"lesson-4.2-calculating-a-rolling-window","chapter":"Course Outline: Manipulating Time Series Data in R","heading":"Lesson 4.2: Calculating a Rolling Window","text":"Learning Objective: Learners able perform rolling window operation time series, creating moving average (moving sum) arbitrary length:\nzoo::rollapply()\nzoo::rollapplyr() (convenience wrapper zoo::rollapply(align = \"right\"))\ne.g.: zoo::rollapplyr(daily_data, FUN = mean, width = 7) create 7-day rolling average daily_data\nzoo::rollapply()zoo::rollapplyr() (convenience wrapper zoo::rollapply(align = \"right\"))e.g.: zoo::rollapplyr(daily_data, FUN = mean, width = 7) create 7-day rolling average daily_data","code":""},{"path":"course-outline-manipulating-time-series-data-in-r.html","id":"lesson-4.3-calculating-an-expanding-window","chapter":"Course Outline: Manipulating Time Series Data in R","heading":"Lesson 4.3: Calculating an Expanding Window","text":"Learning Objective: Learners able create expanding window – rolling window “start” fixed “end” moves:\ncumsum()\nseq_along()\ncumsum(data) / seq_along(data) gives rolling mean, exists dplyr::cummean() base R.\ncumsum()seq_along()cumsum(data) / seq_along(data) gives rolling mean, exists dplyr::cummean() base R.","code":""},{"path":"course-outline-manipulating-time-series-data-in-r.html","id":"lesson-4.4-plotting-windows-alongside-data","chapter":"Course Outline: Manipulating Time Series Data in R","heading":"Lesson 4.4: Plotting windows alongside Data","text":"Learning Objective: Learners able plot rolling/expanding window alongside original data, order visually assess operations affect data:\nplot()\nlines()\nplot()lines()","code":""},{"path":"introduction-to-time-series-data.html","id":"introduction-to-time-series-data","chapter":"1 - Introduction to time series data","heading":"1 - Introduction to time series data","text":"","code":""},{"path":"introduction-to-time-series-data.html","id":"lesson-what-is-time-series-data","chapter":"1 - Introduction to time series data","heading":"1.1 Lesson: What is Time Series Data","text":"Learning Objective: Learner able understand TS-data differs non-temporal dataLO: kinds inferences results can obtained TS-dataLO: Converting time-based data formats, numeric, Date, POSIXct classes\nFunctions: .Date(), lubridate::, etc.\nFunctions: .Date(), lubridate::, etc.","code":""},{"path":"introduction-to-time-series-data.html","id":"lesson-how-to-interpret-time-series-data","chapter":"1 - Introduction to time series data","heading":"1.2 Lesson: How to Interpret Time Series Data","text":"LO: Learner understand interpret attributes basic time series plotLO: “Signal Noise” context TS dataIntroduction Stationarity: real-world data stationary require additional steps work ","code":""},{"path":"introduction-to-time-series-data.html","id":"lesson-components-of-time-series-data","chapter":"1 - Introduction to time series data","heading":"1.3 Lesson: Components of Time Series Data","text":"","code":""},{"path":"creating-and-manipulating-time-series.html","id":"creating-and-manipulating-time-series","chapter":"2 - Creating and Manipulating Time Series","heading":"2 - Creating and Manipulating Time Series","text":"","code":""},{"path":"creating-and-manipulating-time-series.html","id":"ts-class","chapter":"2 - Creating and Manipulating Time Series","heading":"2.1 ts Class","text":"","code":""},{"path":"creating-and-manipulating-time-series.html","id":"missing-values","chapter":"2 - Creating and Manipulating Time Series","heading":"2.2 Missing Values","text":"","code":"\nd <- c('2001-01-01', '2001-01-02', '2001-01-04', '2001-01-05')\nd <- as.Date(d)\ndate_range <- seq(min(d), max(d), by = 1) \ndate_range[!date_range %in% d] ## [1] \"2001-01-03\""},{"path":"rolling-and-expanding-windows.html","id":"rolling-and-expanding-windows","chapter":"3 - Rolling and Expanding Windows","heading":"3 - Rolling and Expanding Windows","text":"","code":""},{"path":"rolling-and-expanding-windows.html","id":"rolling-window","chapter":"3 - Rolling and Expanding Windows","heading":"3.1 Rolling Window","text":"Moving lower upper bound","code":""},{"path":"rolling-and-expanding-windows.html","id":"data","chapter":"3 - Rolling and Expanding Windows","heading":"3.1.1 Data","text":"","code":""},{"path":"rolling-and-expanding-windows.html","id":"calculating-a-rolling-window","chapter":"3 - Rolling and Expanding Windows","heading":"3.1.2 Calculating a Rolling Window","text":"","code":""},{"path":"introduction-to-forecasting-in-r.html","id":"introduction-to-forecasting-in-r","chapter":"4 - Introduction to Forecasting in R","heading":"4 - Introduction to Forecasting in R","text":"","code":""},{"path":"introduction-to-forecasting-in-r.html","id":"methods-for-forecasting","chapter":"4 - Introduction to Forecasting in R","heading":"4.1 Methods for Forecasting","text":"","code":""},{"path":"introduction-to-forecasting-in-r.html","id":"exponential-smoothing","chapter":"4 - Introduction to Forecasting in R","heading":"4.1.1 Exponential Smoothing","text":"","code":""},{"path":"capstone-exercise.html","id":"capstone-exercise","chapter":"5 - Capstone Exercise","heading":"5 - Capstone Exercise","text":"final exercise course involves performing time series analysis real-world data: Carbon Dioxide concentration Mauna Loa Observatory, early 1959 Present. ’ll go process importing data, converting time series object (zoo), imputing missing values, plotting resulting data. Additionally, create aggregate data, well rolling window average data.","code":""},{"path":"capstone-exercise.html","id":"importing-the-data","chapter":"5 - Capstone Exercise","heading":"5.1 Importing the Data","text":"","code":"\n# The following libraries are included for you\n\nlibrary(zoo)\n# Sample data from the Mauna Loa Observatory\n# https://gml.noaa.gov/webdata/ccgg/trends/co2/co2_mm_mlo.csv\n\n# Data is already pre-processed as a `zoo` object. It contains missing values,\n# so we'll need to impute those!\n\n# This will be hidden from the users, of course.\nmissing_co2 <- readRDS(\"data/missing.Rds\")"},{"path":"capstone-exercise.html","id":"visualizing-the-data","chapter":"5 - Capstone Exercise","heading":"5.2 Visualizing the Data","text":"Perform basic data exploration :Printing first 20 observations head(), ,Creating plot data plot()Notice “holes” data? suggests ’ve got NA values, apparent view first observations head().","code":"\nhead(missing_co2, n = 20)## Jan 1959 Feb 1959 Mar 1959 Apr 1959 May 1959 Jun 1959 Jul 1959 Aug 1959 \n##   315.58   316.48   316.65   317.72   318.29   318.15       NA       NA \n## Sep 1959 Oct 1959 Nov 1959 Dec 1959 Jan 1960 Feb 1960 Mar 1960 Apr 1960 \n##   313.84   313.33   314.81       NA   316.43   316.98       NA       NA \n## May 1960 Jun 1960 Jul 1960 Aug 1960 \n##   320.04   319.59   318.18   315.90\nplot(missing_co2)"},{"path":"capstone-exercise.html","id":"imputing-the-missing-values","chapter":"5 - Capstone Exercise","heading":"5.3 Imputing the Missing Values","text":"Impute missing values cubic spline interpolation, plot results","code":"\nfilled_co2 <- na.spline(missing_co2)\nplot(filled_co2)"},{"path":"capstone-exercise.html","id":"yearly-aggregate","chapter":"5 - Capstone Exercise","heading":"5.4 Yearly Aggregate","text":"Using aggregate(), create yearly mean data, plot data*Hint: use lubridate::year()","code":"\nyearly_co2 <- aggregate(filled_co2,\n  by = lubridate::year,\n  FUN = mean\n)\n\n\nplot(yearly_co2)"},{"path":"capstone-exercise.html","id":"rolling-window-1","chapter":"5 - Capstone Exercise","heading":"5.5 Rolling Window","text":"Calculate 12-month rolling window average data, overlay results (blue) top original data. Label x-axis “Time” y-axis “CO2 Concentration”, give graph title “Monthly CO2 Concentration Mauna Loa Observatory”","code":"\nroll <- rollapplyr(filled_co2,\n  FUN = mean,\n  width = 12\n)\n\nplot(filled_co2,\n     xlab = \"Time\",\n     ylab = \"CO2 Concentration\",\n     main = \"CO2 Concentration at Mauna Loa Observatory\")\n\nlines(roll, col = \"blue\")"},{"path":"capstone-exercise.html","id":"given-code","chapter":"5 - Capstone Exercise","heading":"5.6 Given Code","text":"following code given learners beginning exercise:","code":"# Question 1: Explore the Data\n___(missing_co2, ___ = ___)\n\n___(missing_co2)# Question 2: Impute Missing Values\n\nfilled_co2 <- ___(___)\n\n___(filled_co2)# Question 3: Find Yearly Mean Aggregate\nyearly_co2 = aggregate(___, by = ___, FUN = ___)\n\n___(___)# Question 4: Calculate a Rolling Window\nroll <- rollapplyr(filled_co2, FUN = ___, width = 12)\n\nplot(___,\n     xlab = ___,\n     ylab = ___,\n     main = \"CO2 Concentration at Mauna Loa Observatory\")\n\nlines(___, col = ___)"}]
